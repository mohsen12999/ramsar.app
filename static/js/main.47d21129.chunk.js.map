{"version":3,"sources":["shares/URLs.ts","shares/Constants.ts","components/Layout.tsx","pages/Home.tsx","pages/About.tsx","pages/Notfound.tsx","App.tsx","shares/LocalStorages.ts","store/Data.ts","shares/FakeData.ts","store/index.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","store/configureStore.ts"],"names":["Pages","Status","Layout","children","React","useState","supportsPWA","setSupportsPWA","promptInstall","setPromptInstall","useEffect","handler","e","preventDefault","window","addEventListener","removeEventListener","Fragment","className","to","process","HomePage","width","height","xmlns","viewBox","fill","d","About","onClick","prompt","Promise","reject","Error","connect","state","categories","data","searchText","SetSearchText","src","alt","type","placeholder","value","onChange","target","filter","c","parentId","map","category","img","name","id","href","dir","role","Notfound","App","exact","path","component","Home","DataActions","Data","fakeCategories","fakeFacilities","reducers","incomingAction","undefined","status","INIT","facilities","action","DATA_REQUEST","cachedData","JSON","parse","localStorage","getItem","LOADING","DATA_FAILURE","FAILED","DATA_SUCCESS","payload","currentState","SUCCEEDED","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","store","initialState","middleware","thunk","routerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","push","createStore","compose","applyMiddleware","configureStore","ReactDOM","render","StrictMode","document","getElementById","URL","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.47d21129.chunk.js","sourcesContent":["export const DATA_URL = \"/api/public\";\r\n\r\nexport enum Pages {\r\n  HomePage = \"/\",\r\n  Register = \"/register\",\r\n  About = \"/about\",\r\n  // Faq = \"/faq\",\r\n  // Category = \"/category/\",\r\n  // Facility = \"/facility/\",\r\n  // Search = \"/search/\",\r\n  // Notfound = \"/notfound\",\r\n}\r\n","export enum Status {\r\n  INIT = \"INIT\",\r\n  IDLE = \"IDLE\",\r\n  LOADING = \"LOADING\",\r\n  SUCCEEDED = \"SUCCEEDED\",\r\n  FAILED = \"FAILED\",\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Pages } from \"../shares/URLs\";\r\n\r\n// TODO: upload data at start (status = init)\r\nconst Layout: React.FC = ({ children }) => {\r\n  const [supportsPWA, setSupportsPWA] = React.useState(false);\r\n  const [\r\n    promptInstall,\r\n    setPromptInstall,\r\n  ] = React.useState<IBeforeInstallPromptEvent | null>(null);\r\n\r\n  interface IBeforeInstallPromptEvent extends Event {\r\n    readonly platforms: Array<string>;\r\n    readonly userChoice: Promise<{\r\n      outcome: \"accepted\" | \"dismissed\";\r\n      platform: string;\r\n    }>;\r\n    prompt: () => Promise<void>;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const handler = (e: IBeforeInstallPromptEvent) => {\r\n      e.preventDefault();\r\n      setSupportsPWA(true);\r\n      setPromptInstall(e);\r\n    };\r\n    window.addEventListener(\"beforeinstallprompt\", handler as any);\r\n\r\n    return () => window.removeEventListener(\"transitionend\", handler as any);\r\n  }, []);\r\n\r\n  const promptToInstall = () => {\r\n    if (promptInstall) {\r\n      return promptInstall.prompt();\r\n    }\r\n    return Promise.reject(\r\n      new Error(\r\n        'Tried installing before browser sent \"beforeinstallprompt\" event'\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main>{children}</main>\r\n      <footer>\r\n        <div className=\"py-4 flex\">\r\n          <ul className=\"menu items-stretch px-3 shadow-lg bg-base-100 bg-neutral-focus horizontal rounded-box m-auto vazir-font\">\r\n            <li>\r\n              <Link to={process.env.PUBLIC_URL + Pages.HomePage}>\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"currentColor\"\r\n                  className=\"inline-block w-6 h-6 ml-2\"\r\n                >\r\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                  <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"></path>\r\n                </svg>\r\n                صفحه نخست\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={process.env.PUBLIC_URL + Pages.About}>\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"currentColor\"\r\n                  className=\"inline-block w-6 h-6 ml-2\"\r\n                >\r\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                  <path d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"></path>\r\n                </svg>\r\n                درباره ما\r\n              </Link>\r\n            </li>\r\n            {supportsPWA && (\r\n              <li>\r\n                <button onClick={promptToInstall}>\r\n                  <svg\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"currentColor\"\r\n                    className=\"inline-block w-6 h-6 ml-2\"\r\n                  >\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"></path>\r\n                  </svg>\r\n                  نصب برنامه\r\n                </button>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Layout from \"../components/Layout\";\r\nimport { ICategory } from \"../shares/Interfaces\";\r\nimport { ApplicationState } from \"../store\";\r\n\r\ninterface IHomeProps {\r\n  categories: ICategory[];\r\n}\r\n\r\ninterface IParamTypes {\r\n  id: string;\r\n}\r\n\r\nconst Home: React.FC<IHomeProps> = ({ categories }) => {\r\n  const [searchText, SetSearchText] = React.useState<string>();\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={\"flex \" + (searchText ? \"flex-row\" : \"flex-col\")}>\r\n        <div className=\"max-w-xs m-auto\">\r\n          <figure>\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/img/national-park.png\"}\r\n              alt=\"رامسر اپ\"\r\n            />\r\n          </figure>\r\n          <div className=\"card-body\">\r\n            <h2 className=\"card-title text-center vazir-font\">رامسر اپ</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-2/3 md:max-w-sm m-auto\">\r\n          <div className=\"form-control\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"جستجو\"\r\n              value={searchText}\r\n              onChange={(e) => {\r\n                SetSearchText(e.target.value);\r\n              }}\r\n              className=\"input input-info input-bordered vazir-font\"\r\n            />\r\n            <label className=\"label\">\r\n              <span className=\"label-text-alt vazir-font\">\r\n                مثل کلیدساز یا تاکسی یا بیمارستان\r\n              </span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-wrap justify-evenly\">\r\n        {categories\r\n          .filter((c) => c.parentId === 0)\r\n          .map((category) => (\r\n            <Link\r\n              className=\"max-w-xs m-2\"\r\n              key={category.id}\r\n              to={process.env.PUBLIC_URL}\r\n            >\r\n              <div className=\"card bordered shadow-2xl hover:shadow-lg\">\r\n                <figure>\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + category.img}\r\n                    alt={category.name}\r\n                  />\r\n                </figure>\r\n                <div className=\"card-body\">\r\n                  <h2 className=\"card-title text-center vazir-font\">\r\n                    {category.name}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// {\r\n//   const { id } = useParams<IParamTypes>();\r\n\r\n//   const pId = Number(id ?? 0);\r\n//   console.log(id, pId);\r\n\r\n//   return (\r\n//     <Layout>\r\n//       <div className=\"grid grid-cols-2 gap-2 sm:grid-cols-4 md:grid-col-6\">\r\n//         {categories\r\n//           .filter((c) => c.parentId === pId)\r\n//           .map((category) => (\r\n//             <Link\r\n//               key={category.id}\r\n//               to={process.env.PUBLIC_URL + Pages.HomePage + category.id}\r\n//             >\r\n//               <div className=\"card bordered shadow-2xl hover:shadow-lg\">\r\n//                 <figure>\r\n//                   <img\r\n//                     src={process.env.PUBLIC_URL + category.img}\r\n//                     alt={category.name}\r\n//                   />\r\n//                 </figure>\r\n//                 <div className=\"card-body\">\r\n//                   <h2 className=\"card-title text-center\">{category.name}</h2>\r\n//                 </div>\r\n//               </div>\r\n//             </Link>\r\n//           ))}\r\n//       </div>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state: ApplicationState) => ({\r\n  categories: state.data ? state.data.categories : [],\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nconst About = () => (\r\n  <Layout>\r\n    <div className=\"hero bg-base-200 main\">\r\n      <div className=\"flex-col hero-content lg:flex-row-reverse\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/img/national-park.png\"}\r\n          alt=\"رامسر اپ\"\r\n          className=\"max-w-sm rounded-lg shadow-2xl\"\r\n        />\r\n        <div>\r\n          <h1 className=\"mb-5 text-5xl font-bold vazir-font\">درباره ما</h1>\r\n          <p className=\"mb-5 vazir-font\">\r\n            من محسن شعبانیان سازنده این اپ هستم. رامسر اپ یک پروژه شخصی هست و که\r\n            بدون هیچ چشم‌داشت مالی برای کمک به شناخت و پیدا کردن امکانات در سطح\r\n            شهر با کمک خود همشهریان ساخته شده.\r\n          </p>\r\n          <p className=\"mb-5 vazir-font\">\r\n            طرح ساخت این نرم افزار و نمونه‌های بهتر و با امکانات بیشتر سال‌هاست\r\n            با بدقولی و پیمان شکنی‌های مسئولین شهری به کناری افتاده‌اند. این\r\n            نرم‌افزار ساده آخرین تلاشم هست تا به صورت مستقل و با کمک همشهریان و\r\n            علاقه‌مندان این پروژه را به سرانجام برسانیم.\r\n          </p>\r\n          <p className=\"mb-5 vazir-font\">\r\n            به شدت منتظر پیشنهادات، انتقادات و معرفی مکان جدید از طرف شما هستیم.\r\n          </p>\r\n          <p className=\"mb-2 vazir-font\">\r\n            <a\r\n              href=\"https://instagram.com/ramsarapp\"\r\n              dir=\"ltr\"\r\n              className=\"btn btn-sm btn-outline btn-secondary mr-2\"\r\n            >\r\n              <svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                role=\"img\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"currentColor\"\r\n                className=\"inline-block w-4 h-4 mr-1 stroke-current\"\r\n              >\r\n                <title>Instagram icon</title>\r\n                <path d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"></path>\r\n              </svg>\r\n              @RamsarApp\r\n            </a>\r\n\r\n            <a\r\n              href=\"https://t.me/RamsarApp\"\r\n              target=\"_blank\"\r\n              dir=\"ltr\"\r\n              className=\"btn btn-sm btn-outline btn-primary mr-2\"\r\n            >\r\n              <svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                role=\"img\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"currentColor\"\r\n                className=\"inline-block w-4 h-4 mr-1 stroke-current\"\r\n              >\r\n                <title>Telegram icon</title>\r\n                <path d=\"M23.91 3.79L20.3 20.84c-.25 1.21-.98 1.5-2 .94l-5.5-4.07-2.66 2.57c-.3.3-.55.56-1.1.56-.72 0-.6-.27-.84-.95L6.3 13.7l-5.45-1.7c-1.18-.35-1.19-1.16.26-1.75l21.26-8.2c.97-.43 1.9.24 1.53 1.73z\"></path>\r\n              </svg>\r\n              @RamsarApp\r\n            </a>\r\n\r\n            <a\r\n              href=\"mailto:info@Ramsar.App\"\r\n              target=\"_blank\"\r\n              dir=\"ltr\"\r\n              className=\"btn btn-sm btn-outline btn-accent mr-2\"\r\n            >\r\n              <svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                role=\"img\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"currentColor\"\r\n                className=\"inline-block w-4 h-4 mr-1 stroke-current\"\r\n              >\r\n                <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\"></path>\r\n                <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\"></path>\r\n              </svg>\r\n              info@Ramsar.App\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Layout>\r\n);\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Notfound = () => <div>Notfound</div>;\r\n\r\nexport default Notfound;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Pages } from \"./shares/URLs\";\n\nimport Home from \"./pages/Home\";\n// import Category from \"./pages/Category\";\n// import Facility from \"./pages/Facility\";\n// import Search from \"./pages/Search\";\n// import Faq from \"./pages/Faq\";\nimport About from \"./pages/About\";\nimport Notfound from \"./pages/Notfound\";\n//import Register from \"./pages/Register\";\n\nconst App = () => (\n  <Switch>\n    <Route\n      exact\n      path={process.env.PUBLIC_URL + Pages.About}\n      component={About}\n    />\n\n    <Route\n      path={process.env.PUBLIC_URL + Pages.HomePage + \":text?\"}\n      component={Home}\n    />\n    <Route component={Notfound} />\n  </Switch>\n);\n\nexport default App;\n","import { IDataState } from \"../store/Data\";\r\n\r\nconst Data = \"Data\";\r\n\r\nexport const SaveDataToLocalStorage = (data: IDataState) => {\r\n  localStorage.setItem(Data, JSON.stringify(data));\r\n};\r\n\r\nexport const GetDataFromLocalStorage = (): IDataState => {\r\n  return JSON.parse(localStorage.getItem(Data) as string);\r\n};\r\n","import axios from \"axios\";\r\nimport { Action, Reducer } from \"redux\";\r\nimport { Status } from \"../shares/Constants\";\r\nimport { ICategory, IFacility } from \"../shares/Interfaces\";\r\nimport { GetDataFromLocalStorage } from \"../shares/LocalStorages\";\r\nimport { DATA_URL } from \"../shares/URLs\";\r\nimport { AppThunkAction } from \"./\";\r\nimport { fakeCategories, fakeFacilities } from \"../shares/FakeData\";\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface IDataState {\r\n  status: Status;\r\n\r\n  categories: ICategory[];\r\n  facilities: IFacility[];\r\n}\r\n\r\nexport enum DataActions {\r\n  DATA_REQUEST = \"DATA_REQUEST\",\r\n  DATA_SUCCESS = \"DATA_SUCCESS \",\r\n  DATA_FAILURE = \"DATA_FAILURE \",\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n// Use @typeName and isActionType for type detection that works even after serialization/deserialization.\r\n\r\nexport interface ILoadData {\r\n  type: DataActions;\r\n  payload?: { message?: string; data?: any; error?: any };\r\n}\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\nexport type KnownAction = ILoadData;\r\n\r\nexport const actionCreators = {\r\n  loadData: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n    if (getState().data?.status === Status.LOADING) {\r\n      dispatch({\r\n        type: DataActions.DATA_FAILURE,\r\n        payload: { message: \"we are in loading!\" },\r\n      });\r\n      return false;\r\n    }\r\n\r\n    dispatch({ type: DataActions.DATA_REQUEST } as ILoadData);\r\n\r\n    try {\r\n      axios.get(DATA_URL).then((response) => {\r\n        if (response && response.data && response.data.success) {\r\n          dispatch({\r\n            type: DataActions.DATA_SUCCESS,\r\n            payload: {\r\n              message: \"axios success get data\",\r\n              data: response.data,\r\n            },\r\n          });\r\n          return true;\r\n        } else {\r\n          dispatch({\r\n            type: DataActions.DATA_FAILURE,\r\n            payload: { message: \"axios not success\", error: response },\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DataActions.DATA_FAILURE,\r\n        payload: { message: \"axios catch error\", error: error },\r\n      });\r\n      return false;\r\n    }\r\n  },\r\n};\r\n\r\nexport const reducer: Reducer<IDataState> = (\r\n  state: IDataState | undefined,\r\n  incomingAction: Action\r\n): IDataState => {\r\n  if (state === undefined) {\r\n    return {\r\n      status: Status.INIT,\r\n      // TODO: Remove for production\r\n      categories: fakeCategories,\r\n      facilities: fakeFacilities,\r\n      //categories: [],\r\n      //facilities: [],\r\n    };\r\n  }\r\n\r\n  const action = incomingAction as KnownAction;\r\n\r\n  switch (action.type) {\r\n    case DataActions.DATA_REQUEST:\r\n      const cachedData = GetDataFromLocalStorage();\r\n\r\n      return cachedData\r\n        ? { ...cachedData, status: Status.LOADING }\r\n        : { ...state, status: Status.LOADING };\r\n\r\n    case DataActions.DATA_FAILURE:\r\n      return { ...state, status: Status.FAILED };\r\n\r\n    case DataActions.DATA_SUCCESS:\r\n      if (action.payload && action.payload.data) {\r\n        const data = action.payload.data;\r\n        const currentState = { ...state };\r\n        if (data.categories) {\r\n          currentState.categories = data.categories;\r\n        }\r\n        if (data.facilities) {\r\n          currentState.facilities = data.facilities;\r\n        }\r\n        return { ...currentState, status: Status.SUCCEEDED };\r\n      }\r\n      return { ...state, status: Status.SUCCEEDED };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ICategory, IFacility } from \"./Interfaces\";\r\n\r\nexport const fakeCategories: ICategory[] = [\r\n  { id: 1, name: \"مراکز درمانی\", img: \"/img/ambulance.png\", parentId: 0 },\r\n  { id: 2, name: \"خدمات فنی\", img: \"/img/maintenance.png\", parentId: 0 },\r\n  { id: 3, name: \"موسسات هنری\", img: \"/img/classroom.png\", parentId: 0 },\r\n  { id: 4, name: \"وسایل نقلیه\", img: \"/img/car.png\", parentId: 0 },\r\n  { id: 5, name: \"غذا و نوشیدنی\", img: \"/img/coffee.png\", parentId: 0 },\r\n  { id: 6, name: \"سایر مراکز\", img: \"/img/library.png\", parentId: 0 },\r\n];\r\n\r\nexport const fakeFacilities: IFacility[] = [];\r\n","import * as Data from \"./Data\";\r\n\r\n// The top-level state object\r\nexport interface ApplicationState {\r\n  data: Data.IDataState | undefined;\r\n}\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n  data: Data.reducer,\r\n};\r\n\r\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\r\n// correctly typed to match your store.\r\nexport interface AppThunkAction<TAction> {\r\n  (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport configureStore from \"./store/configureStore\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst history = createBrowserHistory();\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst store = configureStore(history);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\r\nimport { History } from \"history\";\r\nimport { ApplicationState, reducers } from \"./\";\r\n\r\nexport default function configureStore(\r\n  history: History,\r\n  initialState?: ApplicationState\r\n) {\r\n  const middleware = [thunk, routerMiddleware(history)];\r\n\r\n  const rootReducer = combineReducers({\r\n    ...reducers,\r\n    router: connectRouter(history),\r\n  });\r\n\r\n  const enhancers = [];\r\n  const windowIfDefined =\r\n    typeof window === \"undefined\" ? null : (window as any); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ...enhancers)\r\n  );\r\n}\r\n"],"sourceRoot":""}